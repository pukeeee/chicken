"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GitHub Pull Request.

–¶–µ–π —Å–∫—Ä–∏–ø—Ç –≤–∏–∫–æ–Ω—É—î –Ω–∞—Å—Ç—É–ø–Ω—ñ –¥—ñ—ó:
1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î, —â–æ –≤–∏ –Ω–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ñ–π –≥—ñ–ª—Ü—ñ.
2. –í—ñ–¥–ø—Ä–∞–≤–ª—è—î (push) –≤–∞—à—É –ø–æ—Ç–æ—á–Ω—É –≥—ñ–ª–∫—É –Ω–∞ GitHub.
3. –ì–µ–Ω–µ—Ä—É—î –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ —Ç—ñ–ª–æ PR –Ω–∞ –æ—Å–Ω–æ–≤—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –∫–æ–º–º—ñ—Ç—ñ–≤.
4. –°—Ç–≤–æ—Ä—é—î Pull Request –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é GitHub CLI (`gh`).
5. (–û–ø—Ü—ñ–π–Ω–æ) –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –≤ —Ä–µ–∂–∏–º —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ PR —ñ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
   –≤–∏–¥–∞–ª—è—î –ª–æ–∫–∞–ª—å–Ω—É –≥—ñ–ª–∫—É –ø—ñ—Å–ª—è —ó—ó —É—Å–ø—ñ—à–Ω–æ–≥–æ –∑–ª–∏—Ç—Ç—è (merge).

–í–∏–º–æ–≥–∏:
- –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π `git`.
- –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π —Ç–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π `gh` (GitHub CLI).
"""
import subprocess
import sys
import time
import json

# --- –ì–ª–æ–±–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
BASE_BRANCH = "master"
AUTOMEGE_LABEL = "automerge"


def run_command(command, check=True):
    """
    –ë–µ–∑–ø–µ—á–Ω–æ –≤–∏–∫–æ–Ω—É—î –∑–æ–≤–Ω—ñ—à–Ω—é –∫–æ–º–∞–Ω–¥—É —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—ó —Ä–µ–∑—É–ª—å—Ç–∞—Ç (stdout).

    Args:
        command (list): –ö–æ–º–∞–Ω–¥–∞ —Ç–∞ —ó—ó –∞—Ä–≥—É–º–µ–Ω—Ç–∏ —É –≤–∏–≥–ª—è–¥—ñ —Å–ø–∏—Å–∫—É.
        check (bool): –Ø–∫—â–æ True, –≤–∏–∫–ª–∏—á–µ –≤–∏–Ω—è—Ç–æ–∫ —É —Ä–∞–∑—ñ –ø–æ–º–∏–ª–∫–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è.

    Returns:
        str: –¢–µ–∫—Å—Ç–æ–≤–∏–π –≤–∏–≤—ñ–¥ –∫–æ–º–∞–Ω–¥–∏.

    Raises:
        SystemExit: –ó–∞–≤–µ—Ä—à—É—î —Ä–æ–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞, —è–∫—â–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞
                    –∞–±–æ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—è –∑ –ø–æ–º–∏–ª–∫–æ—é.
    """
    try:
        result = subprocess.run(
            command,
            check=check,
            capture_output=True,
            text=True,
            encoding='utf-8'
        )
        return result.stdout.strip()
    except FileNotFoundError:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: –ö–æ–º–∞–Ω–¥–∞ '{command[0]}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ git —Ç–∞ gh CLI –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ.")
        sys.exit(1)
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏: {' '.join(command)}")
        print(f"   Stderr: {e.stderr.strip()}")
        sys.exit(1)


def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è, —â–æ –∫–µ—Ä—É—î –ø—Ä–æ—Ü–µ—Å–æ–º —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É PR."""
    
    # --- –ö—Ä–æ–∫ 1: –ë–∞–∑–æ–≤—ñ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ ---
    current_branch = run_command(["git", "rev-parse", "--abbrev-ref", "HEAD"])

    # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –º–∏ –Ω–µ –Ω–∞–º–∞–≥–∞—î–º–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ PR –∑ –æ—Å–Ω–æ–≤–Ω–æ—ó –≥—ñ–ª–∫–∏.
    if current_branch == BASE_BRANCH:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: –í–∏ –∑–Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –≥—ñ–ª—Ü—ñ '{BASE_BRANCH}'. –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ —Å–≤–æ—é –≥—ñ–ª–∫—É –∑ —Ñ—ñ—á–µ—é.")
        sys.exit(1)

    # --- –ö—Ä–æ–∫ 2: –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—è –∑ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—î–º ---
    # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ—Ç–æ—á–Ω—É –≥—ñ–ª–∫—É –Ω–∞ GitHub. –¶–µ –≥–∞—Ä–∞–Ω—Ç—É—î, —â–æ PR –±—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ
    # –∑ –æ—Å—Ç–∞–Ω–Ω—ñ–º–∏ –ª–æ–∫–∞–ª—å–Ω–∏–º–∏ –∑–º—ñ–Ω–∞–º–∏. –ö–æ–º–∞–Ω–¥–∞ —Ç–∞–∫–æ–∂ —Å—Ç–≤–æ—Ä–∏—Ç—å –≤—ñ–¥–¥–∞–ª–µ–Ω—É –≥—ñ–ª–∫—É,
    # —è–∫—â–æ —ó—ó –Ω–µ —ñ—Å–Ω—É—î.
    print(f"üÖøÔ∏è  –°–ø—Ä–æ–±–∞ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–º—ñ–Ω–∏ –≥—ñ–ª–∫–∏ '{current_branch}' –Ω–∞ GitHub...")
    run_command(["git", "push", "--set-upstream", "origin", current_branch])
    print("‚úÖ –ì—ñ–ª–∫–∞ —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ GitHub.")

    # –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –æ—Å–Ω–æ–≤–Ω–æ—ó –≥—ñ–ª–∫–∏, —â–æ–± –∫–æ—Ä–µ–∫—Ç–Ω–æ –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ –∫–æ–º–º—ñ—Ç–∏.
    print(f"üîÑ –û–Ω–æ–≤–ª—é—é —Å—Ç–∞–Ω –≥—ñ–ª–∫–∏ '{BASE_BRANCH}' –∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é...")
    run_command(["git", "fetch", "origin", BASE_BRANCH])

    # --- –ö—Ä–æ–∫ 3: –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è Pull Request ---
    # –®—É–∫–∞—î–º–æ –∫–æ–º–º—ñ—Ç–∏, —è–∫—ñ —î –≤ –Ω–∞—à—ñ–π –≥—ñ–ª—Ü—ñ, –∞–ª–µ –≤—ñ–¥—Å—É—Ç–Ω—ñ –≤ `origin/master`.
    # `check=False` –¥–æ–∑–≤–æ–ª—è—î –Ω–∞–º —Å–∞–º–∏–º –æ–±—Ä–æ–±–∏—Ç–∏ –≤–∏–ø–∞–¥–æ–∫, –∫–æ–ª–∏ –Ω–æ–≤–∏—Ö –∫–æ–º–º—ñ—Ç—ñ–≤ –Ω–µ–º–∞—î.
    commit_log = run_command(
        ["git", "log", f"origin/{BASE_BRANCH}..HEAD", "--reverse", "--pretty=format:%s"],
        check=False
    )

    # –Ø–∫—â–æ –Ω–æ–≤–∏—Ö –∫–æ–º–º—ñ—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, —Ä–æ–±–æ—Ç–∞ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–µ –º–∞—î —Å–µ–Ω—Å—É.
    if not commit_log:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤–∏—Ö –∫–æ–º–º—ñ—Ç—ñ–≤ —É –≥—ñ–ª—Ü—ñ '{current_branch}' –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑ '{BASE_BRANCH}'.")
        print("–ú–æ–∂–ª–∏–≤–æ, –≤–∏ –∑–∞–±—É–ª–∏ –∑—Ä–æ–±–∏—Ç–∏ –∫–æ–º–º—ñ—Ç –∞–±–æ –≤–∞—à–∞ –≥—ñ–ª–∫–∞ –Ω–µ –≤—ñ–¥—Ä—ñ–∑–Ω—è—î—Ç—å—Å—è –≤—ñ–¥ master.")
        sys.exit(1)

    # –ü–µ—Ä—à–∏–π –∫–æ–º–º—ñ—Ç —É –≥—ñ–ª—Ü—ñ —Å—Ç–∞—î –∑–∞–≥–æ–ª–æ–≤–∫–æ–º PR.
    commits = commit_log.split('\n')
    pr_title = commits[0]

    # –§–æ—Ä–º—É—î–º–æ –∫—Ä–∞—Å–∏–≤–∏–π —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –∑–º—ñ–Ω –¥–ª—è —Ç—ñ–ª–∞ PR.
    commit_list_for_body = run_command(
        ["git", "log", f"origin/{BASE_BRANCH}..HEAD", "--pretty=format:- %s"]
    )
    pr_body = f"""### –ó–º—ñ–Ω–∏ –≤ —Ü—å–æ–º—É PR:

{commit_list_for_body}
---
*PR —Å—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.*"""

    # --- –ö—Ä–æ–∫ 4: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Pull Request ---
    # –í–∏–≤–æ–¥–∏–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –º–∞–π–±—É—Ç–Ω—ñ–π PR –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    print("\n–°—Ç–≤–æ—Ä—é—é Pull Request...")
    print("=======================")
    print(f"  –ì—ñ–ª–∫–∞:    {current_branch} -> {BASE_BRANCH}")
    print(f"  –ù–∞–∑–≤–∞:    {pr_title}")
    print(f"  –ú—ñ—Ç–∫–∞:    {AUTOMEGE_LABEL}")
    print("--- –¢—ñ–ª–æ PR: ---")
    print(pr_body)
    print("------------------")

    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ GitHub CLI –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è PR –∑ —É—Å—ñ–º–∞ –∑—ñ–±—Ä–∞–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏.
    gh_command = [
        "gh", "pr", "create",
        "--base", BASE_BRANCH,
        "--head", current_branch,
        "--title", pr_title,
        "--body", pr_body,
        "--label", AUTOMEGE_LABEL
    ]
    run_command(gh_command)
    print("‚úÖ Pull Request —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!")

    # --- –ö—Ä–æ–∫ 5: –û–ø—Ü—ñ–π–Ω–µ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–∞ –æ—á–∏—â–µ–Ω–Ω—è ---
    # –ó–∞–ø–∏—Ç—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –≥—ñ–ª–∫—É –ø—ñ—Å–ª—è –º–µ—Ä–¥–∂—É.
    answer = input("\n‚ùì –í–∏–¥–∞–ª–∏—Ç–∏ –ª–æ–∫–∞–ª—å–Ω—É –≥—ñ–ª–∫—É –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ–≥–æ –º–µ—Ä–¥–∂—É PR? (y/N): ").lower()
    if answer != 'y':
        print("üëã –ó–∞–≤–µ—Ä—à—É—é —Ä–æ–±–æ—Ç—É. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≥—ñ–ª–∫—É –≤—Ä—É—á–Ω—É –ø—ñ—Å–ª—è –º–µ—Ä–¥–∂—É.")
        return

    print(f"\n‚è≥ –î–æ–±—Ä–µ, –±—É–¥—É —Å—Ç–µ–∂–∏—Ç–∏ –∑–∞ PR –¥–ª—è –≥—ñ–ª–∫–∏ '{current_branch}'.")
    print("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C, —â–æ–± –∑—É–ø–∏–Ω–∏—Ç–∏ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è —É –±—É–¥—å-—è–∫–∏–π –º–æ–º–µ–Ω—Ç.")

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ü–∏–∫–ª —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è, —è–∫–∏–π —Ç—Ä–∏–≤–∞—Ç–∏–º–µ –¥–æ –º–µ—Ä–¥–∂—É, –∑–∞–∫—Ä–∏—Ç—Ç—è PR –∞–±–æ –ø–æ–º–∏–ª–∫–∏.
    while True:
        try:
            # –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å PR (state) —Ç–∞ —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ (statusCheckRollup).
            pr_info_json = run_command([
                "gh", "pr", "view",
                "--head", current_branch,
                "--json", "number,state,statusCheckRollup"
            ], check=False)

            # –Ø–∫—â–æ PR —â–µ –Ω–µ –∑'—è–≤–∏–≤—Å—è –≤ API, —á–µ–∫–∞—î–º–æ —ñ –ø—Ä–æ–±—É—î–º–æ –∑–Ω–æ–≤—É.
            if not pr_info_json or pr_info_json.strip() == '[]':
                print("‚è≥ –ù–µ –º–æ–∂—É –∑–Ω–∞–π—Ç–∏ PR. –ú–æ–∂–ª–∏–≤–æ, –≤—ñ–Ω —â–µ –Ω–µ –∑'—è–≤–∏–≤—Å—è –≤ API. –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
                time.sleep(10)
                continue

            pr_info = json.loads(pr_info_json)[0]
            pr_number = pr_info.get("number")
            pr_state = pr_info.get("state")
            pr_checks = pr_info.get("statusCheckRollup")

            # –û–±—Ä–æ–±–ª—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Å—Ç–∞–Ω–∏ PR.
            if pr_state == "MERGED":
                print(f"‚úÖ PR #{pr_number} —É—Å–ø—ñ—à–Ω–æ –∑–º–µ—Ä–¥–∂–µ–Ω–æ!")
                print(f"...–ü–µ—Ä–µ–º–∏–∫–∞—é—Å—å –Ω–∞ –≥—ñ–ª–∫—É '{BASE_BRANCH}'...")
                run_command(["git", "checkout", BASE_BRANCH])
                print(f"...–í–∏–¥–∞–ª—è—é –ª–æ–∫–∞–ª—å–Ω—É –≥—ñ–ª–∫—É '{current_branch}'...")
                run_command(["git", "branch", "-D", current_branch])
                print(f"‚úÖ –õ–æ–∫–∞–ª—å–Ω—É –≥—ñ–ª–∫—É '{current_branch}' –≤–∏–¥–∞–ª–µ–Ω–æ. –†–æ–±–æ—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
                break

            elif pr_state == "CLOSED":
                print(f"‚ùå PR #{pr_number} –±—É–ª–æ –∑–∞–∫—Ä–∏—Ç–æ –±–µ–∑ –º–µ—Ä–¥–∂—É. –õ–æ–∫–∞–ª—å–Ω–∞ –≥—ñ–ª–∫–∞ –Ω–µ –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–∞.")
                break

            elif pr_state == "OPEN":
                check_status = pr_checks if pr_checks else "PENDING"
                
                # –Ø–∫—â–æ —Ç–µ—Å—Ç–∏ –≤–ø–∞–ª–∏, –≤–∏—Ö–æ–¥–∏–º–æ, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º—ñ–≥ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–º–∏–ª–∫–∏.
                if check_status == "FAILURE":
                    print(f"‚ùå –¢–µ—Å—Ç–∏ –Ω–∞ PR #{pr_number} –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—è. –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
                    print("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ PR —ñ –≤–∏–ø—Ä–∞–≤—Ç–µ –ø—Ä–æ–±–ª–µ–º–∏.")
                    break
                # –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É ‚Äî —á–µ–∫–∞—î–º–æ —Ç–∞ –ø–æ–≤—Ç–æ—Ä—é—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É.
                elif check_status == "SUCCESS":
                    print(f"‚è≥ PR #{pr_number} –≤—ñ–¥–∫—Ä–∏—Ç–∏–π, —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ. –û—á—ñ–∫—É—î–º–æ –Ω–∞ –º–µ—Ä–¥–∂... (–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ—Ä–µ–∑ 30—Å)")
                else:  # PENDING
                    print(f"‚è≥ PR #{pr_number} –≤—ñ–¥–∫—Ä–∏—Ç–∏–π, —Ç–µ—Å—Ç–∏ –≤–∏–∫–æ–Ω—É—é—Ç—å—Å—è... (–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–µ—Ä–µ–∑ 30—Å)")
                
                time.sleep(30)

        # –î–æ–∑–≤–æ–ª—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –ø–µ—Ä–µ—Ä–≤–∞—Ç–∏ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Ctrl+C.
        except KeyboardInterrupt:
            print("\nüëã –°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º.")
            break
        except Exception as e:
            print(f"\n–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è: {e}")
            print("–ó—É–ø–∏–Ω—è—é —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è.")
            break


# –¢–æ—á–∫–∞ –≤—Ö–æ–¥—É –≤ —Å–∫—Ä–∏–ø—Ç: —è–∫—â–æ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É, –≤–∏–∫–æ–Ω–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é main.
if __name__ == "__main__":
    main()