# Назва нашого процесу, яка буде відображатись у GitHub
name: Run Unit Tests

# Тригери: коли запускати цей процес
on:
  # Запускати на кожен push в гілку master
  push:
    branches: [ "master" ]
  # Запускати при створенні або оновлення pull request на гілку master
  pull_request:
    branches: [ "master" ]

# Задачі, які потрібно виконати
jobs:
  # --- Завдання для Юніт-тестів ---
  unit-test:
    # Вказуємо, що задача має виконуватись на віртуальній машині з Ubuntu
    runs-on: ubuntu-latest
    # Назва середовища, з якого будуть братись секрети
    environment: ci

    # Кроки, які будуть виконані послідовно
    steps:
      # Крок 1: Завантажуємо код з репозиторію
      - name: Checkout Code
        uses: actions/checkout@v4

      # Крок 2: Встановлюємо потрібну версію Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm' # Вмикаємо кешування для npm, щоб прискорити майбутні запуски

      # Крок 3: Встановлюємо залежності (швидкий та надійний спосіб для CI)
      - name: Install Dependencies
        run: npm ci

      # Крок 4: Запускаємо юніт-тести
      - name: Run Unit Tests
        run: npm run test:unit

      # Крок 5: Перевіряємо, що проєкт успішно збирається
      - name: Build Application
        run: npm run build

      # Крок 6: Сповіщення про помилку (для PR)
      - name: Send Telegram message on failure unit-test (Pull Request)
        if: failure() && github.event_name == 'pull_request'
        run: |
          MESSAGE="❌ *Unit tests провалено!*%0A%0APR: *#${{ github.event.pull_request.number }}*%0AРепозиторій: *${{ github.repository }}*%0A%0A[Перейти до логів](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"

      # Крок 7: Сповіщення про помилку (для коммітів в master)
      - name: Send Telegram message on failure unit-test (Push to master)
        if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          MESSAGE="❌ *Unit tests на гілці 'master' провалено!*%0A%0AРепозиторій: *${{ github.repository }}*%0AКомміт: 
          $SHORT_SHA
          %0A%0A[Перейти до логів](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"
    
  # --- Завдання для Інтеграційних тестів ---
  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test # Запускати тільки після успішних юніт-тестів
    environment: ci
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Load .env.test file
        run: grep -v -e '^#' -e '^\s*$' .env.test >> $GITHUB_ENV

      - name: Install Dependencies
        run: npm ci

      - name: Run Integration Tests
        run: npm run test:integration
        env:
          REDIS_URI: redis://localhost:6379
      
      # Сповіщення про помилку (для PR)
      - name: Send Telegram message on failure integration-test (Pull Request)
        if: failure() && github.event_name == 'pull_request'
        run: |
          MESSAGE="❌ *Integration tests провалено!*%0A%0APR: *#${{ github.event.pull_request.number }}*%0AРепозиторій: *${{ github.repository }}*%0A%0A[Перейти до логів](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"

      # Сповіщення про помилку (для коммітів в master)
      - name: Send Telegram message on failure integration-test (Push to master)
        if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          MESSAGE="❌ *Integration tests на гілці 'master' провалено!*%0A%0AРепозиторій: *${{ github.repository }}*%0AКомміт: 
          $SHORT_SHA
          %0A%0A[Перейти до логів](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"

  # --- Завдання для Автомерджу ---
  automerge:
    name: Automerge
    needs: [unit-test, integration-test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    if: |
      github.event_name == 'pull_request' &&
      github.actor != 'dependabot[bot]' &&
      github.event.pull_request.draft == false &&
      contains(github.event.pull_request.labels.*.name, 'automerge')
    steps:
      - name: Merge PR
        uses: pascalgn/automerge-action@v0.16.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_METHOD: "squash"

      # Сповіщення про успіх після успішного автомерджу
      - name: Send Telegram message on success (Pull Request)
        if: success() && github.event_name == 'pull_request'
        run: |
          MESSAGE="✅ *Успішно змерджено!*%0A%0APR: *#${{ github.event.pull_request.number }}*%0A%0A[Перейти до PR](${{ github.event.pull_request.html_url }})"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"