generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String?   @unique
  name      String?
  phone     String    @unique
  password  String?
  isActive  Boolean   @default(true)
  token     String?   @unique
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  orders    Order[]
}

enum Role {
  USER
  ADMIN
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  image       String?
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  category    Category?   @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  categoryId  Int?
  orderItems  OrderItem[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

enum OrderStatus {
  PENDING
  PREPARING
  READY
  DELIVERED
  CANCELLED
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  REFUNDED
}

enum PaymentMethod {
  CASH
  CARD
  ONLINE
}

model Order {
  id              Int           @id @default(autoincrement())
  user            User          @relation(fields: [userId], references: [id], onDelete: Restrict)
  userId          Int
  customerName    String
  customerPhone   String
  customerEmail   String
  deliveryAddress String
  paymentMethod   PaymentMethod @default(CASH)
  status          OrderStatus   @default(PENDING)
  total           Decimal       @default(0)
  createdAt       DateTime      @default(now())
  items           OrderItem[]
  payment         Payment?
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Restrict)
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  productId Int
  quantity  Int      @default(1)
  price     Decimal    // цена на момент покупки

  @@unique([orderId, productId])
}

model Payment {
  id        Int           @id @default(autoincrement())
  order     Order         @relation(fields: [orderId], references: [id])
  orderId   Int           @unique
  amount    Decimal
  method    PaymentMethod @default(CASH)
  status    PaymentStatus @default(PENDING)
  createdAt DateTime      @default(now())
}