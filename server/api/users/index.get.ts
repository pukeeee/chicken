import { getUserByToken } from '../../services/users/userService'

export default defineEventHandler(async (event) => {
  try {
    // console.log('üîç Debug /api/users GET:')
    // console.log('- event.context.user:', event.context.user ? 'EXISTS' : 'NOT_FOUND')
    // console.log('- event.context.isAuthenticated:', event.context.isAuthenticated)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ (—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω middleware)
    if (!event.context.user || !event.context.isAuthenticated) {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      // –≠—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
      return {
        success: false,
        message: 'User not authenticated'
      }
    }
    
    const user = event.context.user
    // console.log('‚úÖ User from context:', user.phone)
    
    return {
      success: true,
      user
    }
    
  } catch (err: any) {
    // console.error('Error in /api/users GET:', err)
    
    if (err.statusCode) {
      throw err
    }
    
    throw createError({
      statusCode: 500,
      statusMessage: 'Internal server error'
    })
  }
})